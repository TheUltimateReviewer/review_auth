spring:
  application:
    name: auth-service


  rabbitmq:
    dynamic: true # Habilita la creación automática de recursos
  cloud:
    stream:
      bindings:
        userCreated-out-0: # Nombre del binding de salida
          destination: userCreatedExchange # Nombre del exchange en RabbitMQ
          binder: rabbit # Especifica que usas RabbitMQ
        profileCreated-in-0:
          destination: profileCreatedExchange
          group: authGroup
      binders:
        rabbit:
          type: rabbit # Define el binder para RabbitMQ
          environment:
            spring:
              rabbitmq:
                host: ${RABBITMQ_HOST:localhost}
                port: 5672 # Puerto de RabbitMQ
                username: admin # Usuario de RabbitMQ
                password: admin # Contraseña de RabbitMQ

  #rabbitmq:
   # host: localhost
  #  port: 5672
  #  username: admin
 #   password: admin
#    virtual-host: /



  datasource:

    url: jdbc:postgresql://${POSTGRES_HOST:localhost}:5432/auth_db
    username: miusuario
    password: '2304'
    driver-class-name: org.postgresql.Driver
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    #hibernate:
      #ddl-auto: update
    show-sql: true


server:
  port: 8081
  servlet:
   context-path: /api/auth

eureka:
  client:
    service-url:
      defaultZone: http://${EUREKA_HOST:localhost}:8761/eureka/
    fetch-registry: true
    register-with-eureka: true
  instance:
    hostname: ${EUREKA_INSTANCE_HOST:localhost}

logging:
  level:
    org:
      springframework:
        amqp: DEBUG
        messaging: DEBUG


